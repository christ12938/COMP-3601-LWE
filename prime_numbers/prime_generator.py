"""
Usage: `python prime_generator.py 16384 65535 > file.coe`

The above command creates a file with all of the prime numbers between 16384 and 65535 (inclusive). The `coe` file can be imported into Vivado to initialise block RAM or ROM.
"""

import sys


def main():
    if len(sys.argv) != 3:
        print("Not enough arguments", file=sys.stderr)
        exit(1)

    start: int = int(sys.argv[1])
    end: int = int(sys.argv[2])

    primes = get_primes(start, end)
    print_file(start, end, primes)


def get_primes(start: int, end: int) -> list:
    primes = []
    for i in range(start, end + 1):
        if is_prime(i):
            primes.append(i)

    return primes


def is_prime(number: int) -> bool:
    if number < 2:
        return False

    for i in range(2, number):
        if number % i == 0:
            return False

    return True


def print_file(start: int, end: int, primes: list) -> None:
    print(f"; Autogenerated primes from {start} to {end} inclusive")
    print(f"; Total primes: {len(primes)}")
    print("memory_initialization_radix=10;")
    print("memory_initialization_vector=")
    for prime in primes:
        print(prime)
    print(";")


if __name__ == "__main__":
    main()
